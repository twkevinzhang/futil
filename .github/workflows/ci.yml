name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Cache Go modules to speed up builds
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Run unit tests
        run: go test -v ./...

      - name: Build the binary
        run: go build -o futil .

      - name: Get release title
        id: get_release_title
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          title="${COMMIT_MESSAGE#release:}"
          title=$(echo "$title" | sed 's/^[[:space:]]*//')
          echo "::set-output name=release_title::$title"

      - name: Create a GitHub Release
        if: startsWith(github.event.head_commit.message, 'release:')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_release_title.outputs.release_title }}
          release_name: ${{ steps.get_release_title.outputs.release_title }}
          draft: false
          prerelease: false

      - name: Upload the built binary as a release asset
        if: startsWith(github.event.head_commit.message, 'release:')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./futil
          asset_name: futil
          asset_content_type: application/octet-stream
