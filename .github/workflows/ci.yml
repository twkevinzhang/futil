name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      # Cache Go modules to speed up builds
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Run Unit Tests
      - name: Run tests
        run: go test -v ./...

      # Build the binary
      - name: Build binary
        run:  go build -o futil ./cmd

      # Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      # Upload the built binary as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./futil
          asset_name: futil
          asset_content_type: application/octet-stream
